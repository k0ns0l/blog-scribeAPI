name: 'Blog Posts'
description: |-

  APIs for managing blog posts
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/posts
    metadata:
      groupName: 'Blog Posts'
      groupDescription: |-

        APIs for managing blog posts
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all posts'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'The page number for pagination.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Number of posts per page.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'Filter by status (published, draft, archived).'
        required: false
        example: published
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 1
      per_page: 10
      status: published
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "title": "Sample Post",
                "slug": "sample-post",
                "excerpt": "This is a sample post",
                "status": "published",
                "published_at": "2023-01-01T00:00:00.000000Z",
                "user": {
                  "id": 1,
                  "name": "John Doe"
                },
                "category": {
                  "id": 1,
                  "name": "Technology"
                }
              }
            ],
            "meta": {
              "current_page": 1,
              "total": 50
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/posts/{id}'
    metadata:
      groupName: 'Blog Posts'
      groupDescription: |-

        APIs for managing blog posts
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a specific post'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      post:
        name: post
        description: 'The post ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
      post: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "title": "Sample Post",
            "slug": "sample-post",
            "content": "Full post content here...",
            "excerpt": "This is a sample post",
            "status": "published",
            "published_at": "2023-01-01T00:00:00.000000Z",
            "user": {
              "id": 1,
              "name": "John Doe"
            },
            "category": {
              "id": 1,
              "name": "Technology"
            },
            "tags": [
              {
                "id": 1,
                "name": "Laravel"
              }
            ],
            "likes_count": 25,
            "comments_count": 10
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/posts
    metadata:
      groupName: 'Blog Posts'
      groupDescription: |-

        APIs for managing blog posts
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new post'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the post.'
        required: true
        example: 'My New Post'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      content:
        name: content
        description: 'The content of the post.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      excerpt:
        name: excerpt
        description: 'The excerpt of the post.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      category_id:
        name: category_id
        description: 'The category ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      tag_ids:
        name: tag_ids
        description: 'The tag IDs.'
        required: false
        example:
          - 1
          - 2
          - 3
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'The status (draft, published).'
        required: false
        example: draft
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      title: 'My New Post'
      content: consequatur
      excerpt: consequatur
      category_id: 1
      tag_ids:
        - 1
        - 2
        - 3
      status: draft
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 1,
            "title": "My New Post",
            "slug": "my-new-post",
            "content": "Post content here...",
            "status": "draft",
            "created_at": "2023-01-01T00:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/posts/{id}'
    metadata:
      groupName: 'Blog Posts'
      groupDescription: |-

        APIs for managing blog posts
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a post'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      post:
        name: post
        description: 'The post ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      post: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the post.'
        required: false
        example: 'Updated Post Title'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      content:
        name: content
        description: 'The content of the post.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      excerpt:
        name: excerpt
        description: 'The excerpt of the post.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      category_id:
        name: category_id
        description: 'The category ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      tag_ids:
        name: tag_ids
        description: 'The tag IDs.'
        required: false
        example:
          - 1
          - 2
          - 3
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'The status (draft, published).'
        required: false
        example: published
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      title: 'Updated Post Title'
      content: consequatur
      excerpt: consequatur
      category_id: 1
      tag_ids:
        - 1
        - 2
        - 3
      status: published
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/posts/{id}'
    metadata:
      groupName: 'Blog Posts'
      groupDescription: |-

        APIs for managing blog posts
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a post'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      post:
        name: post
        description: 'The post ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      post: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/posts/{post_id}/like'
    metadata:
      groupName: 'Blog Posts'
      groupDescription: |-

        APIs for managing blog posts
      subgroup: ''
      subgroupDescription: ''
      title: 'Like a post'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      post_id:
        name: post_id
        description: 'The ID of the post.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      post:
        name: post
        description: 'The post ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      post_id: 1
      post: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Post liked successfully",
            "likes_count": 26
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/posts/{post_id}/like'
    metadata:
      groupName: 'Blog Posts'
      groupDescription: |-

        APIs for managing blog posts
      subgroup: ''
      subgroupDescription: ''
      title: 'Unlike a post'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      post_id:
        name: post_id
        description: 'The ID of the post.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      post:
        name: post
        description: 'The post ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      post_id: 1
      post: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Post unliked successfully",
            "likes_count": 24
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/admin/posts
    metadata:
      groupName: 'Blog Posts'
      groupDescription: |-

        APIs for managing blog posts
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all posts'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'The page number for pagination.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Number of posts per page.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'Filter by status (published, draft, archived).'
        required: false
        example: published
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 1
      per_page: 10
      status: published
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "title": "Sample Post",
                "slug": "sample-post",
                "excerpt": "This is a sample post",
                "status": "published",
                "published_at": "2023-01-01T00:00:00.000000Z",
                "user": {
                  "id": 1,
                  "name": "John Doe"
                },
                "category": {
                  "id": 1,
                  "name": "Technology"
                }
              }
            ],
            "meta": {
              "current_page": 1,
              "total": 50
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/posts
    metadata:
      groupName: 'Blog Posts'
      groupDescription: |-

        APIs for managing blog posts
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new post'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the post.'
        required: true
        example: 'My New Post'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      content:
        name: content
        description: 'The content of the post.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      excerpt:
        name: excerpt
        description: 'The excerpt of the post.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      category_id:
        name: category_id
        description: 'The category ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      tag_ids:
        name: tag_ids
        description: 'The tag IDs.'
        required: false
        example:
          - 1
          - 2
          - 3
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'The status (draft, published).'
        required: false
        example: draft
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      title: 'My New Post'
      content: consequatur
      excerpt: consequatur
      category_id: 1
      tag_ids:
        - 1
        - 2
        - 3
      status: draft
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 1,
            "title": "My New Post",
            "slug": "my-new-post",
            "content": "Post content here...",
            "status": "draft",
            "created_at": "2023-01-01T00:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/admin/posts/{id}'
    metadata:
      groupName: 'Blog Posts'
      groupDescription: |-

        APIs for managing blog posts
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a specific post'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      post:
        name: post
        description: 'The post ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      post: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "title": "Sample Post",
            "slug": "sample-post",
            "content": "Full post content here...",
            "excerpt": "This is a sample post",
            "status": "published",
            "published_at": "2023-01-01T00:00:00.000000Z",
            "user": {
              "id": 1,
              "name": "John Doe"
            },
            "category": {
              "id": 1,
              "name": "Technology"
            },
            "tags": [
              {
                "id": 1,
                "name": "Laravel"
              }
            ],
            "likes_count": 25,
            "comments_count": 10
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/admin/posts/{id}'
    metadata:
      groupName: 'Blog Posts'
      groupDescription: |-

        APIs for managing blog posts
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a post'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      post:
        name: post
        description: 'The post ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      post: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the post.'
        required: false
        example: 'Updated Post Title'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      content:
        name: content
        description: 'The content of the post.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      excerpt:
        name: excerpt
        description: 'The excerpt of the post.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      category_id:
        name: category_id
        description: 'The category ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      tag_ids:
        name: tag_ids
        description: 'The tag IDs.'
        required: false
        example:
          - 1
          - 2
          - 3
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'The status (draft, published).'
        required: false
        example: published
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      title: 'Updated Post Title'
      content: consequatur
      excerpt: consequatur
      category_id: 1
      tag_ids:
        - 1
        - 2
        - 3
      status: published
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/posts/{id}'
    metadata:
      groupName: 'Blog Posts'
      groupDescription: |-

        APIs for managing blog posts
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a post'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      post:
        name: post
        description: 'The post ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      post: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
